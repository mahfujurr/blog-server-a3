import { model, Schema } from "mongoose";
import { TOrder } from "./order.interface";

// Mongoose Schema
const OrderSchema = new Schema<TOrder>({
  selectedType: { type: String, default: 'main' },
  supplierName1: { type: String, },
  proformaInvoiceNo: { type: String, },
  invoiceNo: { type: String, },
  supplierContractNo1: { type: String, },
  customerOrderNo1: { type: String, },
  buyingTerms1: { type: String, },
  shipmentTerm1: { type: String, },
  shipmentDate1: { type: Date, },
  estimatedArrivalDate1: { type: Date, },
  blNumber1: { type: String, },
  vesselVoyageNo: { type: String, },
  loadingPort1: { type: String, },
  dischargePort1: { type: String, },
  customerName: { type: String, },
  refNo: { type: String, },
  date: { type: Date, },
  paymentTerms: { type: String, },
  shippingTerms: { type: String, },
  notes: { type: String },
  // itemDescription: { type: String, },
  // origin: { type: String, },
  // packing: { type: String, },
  // grade: { type: String },
  // qty: { type: String, },
  // purchasePrice: { type: String, },
  // sellingPrice: { type: String, },
  shippingCompanyName: { type: String, },
  shippingDate: { type: Date, },
  shippingCost: { type: Number, },
  insurance: { type: Number, },
  currency: { type: String, },
  addShipping: { type: Boolean, },
  shippingInvoiceNo: { type: String, },
  addStorage: { type: Boolean, },
  storageName: { type: String, },
  storageInvoiceNo: { type: String, },
  storageDate: { type: Date, },
  storageCost: { type: Number, },
  localTransportName: { type: String, },
  localTransportInvoiceNo: { type: String, },
  localTransportDate: { type: Date, },
  localTransportCost: { type: Number, },
  addLocalTransport: { type: Boolean, },
  landTransportName: { type: String, },
  landTransportInvoiceNo: { type: String, },
  landTransportDate: { type: Date, },
  landTransportCost: { type: Number, },
  addLandTransport: { type: Boolean, },
  costClearanceName: { type: String, },
  costClearanceInvoiceNo: { type: String, },
  costClearanceDate: { type: Date, },
  costClearanceCost: { type: Number, },
  addCostClearance: { type: Boolean, },
  indirectSupplierName: { type: String, },
  indirectInvoiceNo: { type: String, },
  IndirectSupplierContractNo: { type: Number, },

  items: [
    {
      itemDescription: { type: String, },
      origin: { type: String, },
      packing: { type: String, },
      grade: { type: String },
      qty: { type: Number, },
      key: { type: Number, },
      newf:{type:String},
      purchasePrice: { type: Number, },
      sellingPrice: { type: Number, },
    },
  ],
});

// Mongoose Model
export const Order = model<TOrder>("Order", OrderSchema);

